// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckboxField using Theme Font Family should return a CheckboxField object with a custom base font family defined 1`] = `
.c0 {
  position: relative;
  background-color: transparent;
  color: inherit;
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: Nunito,sans-serif;
  font-size: 0.8rem;
  font-weight: inherit;
  height: auto;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 0.8;
  position: relative;
  top: auto;
  left: 8px;
  padding-left: 8px;
  padding-right: 8px;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c6 {
  box-sizing: border-box;
}

.c2 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 {
  background-color: transparent;
  color: inherit;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: inherit;
  display: inline-block;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  margin-right: 1rem;
  cursor: pointer;
}

.c5 {
  margin: 0;
  margin-left: 1rem;
  margin-right: 0.5rem;
  cursor: pointer;
}

<div
  className="c0"
>
  <label
    className="c1"
    htmlFor="checkbox"
  >
    Color
  </label>
  <div
    className="c2"
  >
    <label
      className="c3"
      id="checkbox"
      options={
        Array [
          Object {
            "label": "Red",
            "value": "red",
          },
          Object {
            "label": "Yellow",
            "value": "yellow",
          },
          Object {
            "label": "Green",
            "value": "green",
          },
        ]
      }
      value="red"
      values={
        Array [
          "red",
          false,
          false,
        ]
      }
    >
      <div
        className="c4"
      >
        <input
          className="c5"
          disabled={false}
          id="checkbox"
          name="Color[0]"
          onChange={[Function]}
          type="checkbox"
          value="red"
          values={
            Array [
              "red",
              false,
              false,
            ]
          }
        >
          This should be Nunito and red
        </input>
        <div
          className="c6"
        >
          Red
        </div>
      </div>
    </label>
    <label
      className="c3"
      id="checkbox"
      options={
        Array [
          Object {
            "label": "Red",
            "value": "red",
          },
          Object {
            "label": "Yellow",
            "value": "yellow",
          },
          Object {
            "label": "Green",
            "value": "green",
          },
        ]
      }
      value="yellow"
      values={
        Array [
          "red",
          false,
          false,
        ]
      }
    >
      <div
        className="c4"
      >
        <input
          className="c5"
          disabled={false}
          id="checkbox"
          name="Color[1]"
          onChange={[Function]}
          type="checkbox"
          value="yellow"
          values={
            Array [
              "red",
              false,
              false,
            ]
          }
        >
          This should be Nunito and red
        </input>
        <div
          className="c6"
        >
          Yellow
        </div>
      </div>
    </label>
    <label
      className="c3"
      id="checkbox"
      options={
        Array [
          Object {
            "label": "Red",
            "value": "red",
          },
          Object {
            "label": "Yellow",
            "value": "yellow",
          },
          Object {
            "label": "Green",
            "value": "green",
          },
        ]
      }
      value="green"
      values={
        Array [
          "red",
          false,
          false,
        ]
      }
    >
      <div
        className="c4"
      >
        <input
          className="c5"
          disabled={false}
          id="checkbox"
          name="Color[2]"
          onChange={[Function]}
          type="checkbox"
          value="green"
          values={
            Array [
              "red",
              false,
              false,
            ]
          }
        >
          This should be Nunito and red
        </input>
        <div
          className="c6"
        >
          Green
        </div>
      </div>
    </label>
  </div>
</div>
`;

exports[`CheckboxField using Theme Font Family should return a CheckboxField object with a custom font family 1`] = `
.c0 {
  position: relative;
  background-color: transparent;
  color: inherit;
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.8rem;
  font-weight: inherit;
  height: auto;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 0.8;
  position: relative;
  top: auto;
  left: 8px;
  padding-left: 8px;
  padding-right: 8px;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c6 {
  box-sizing: border-box;
}

.c2 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 {
  background-color: transparent;
  color: inherit;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: inherit;
  display: inline-block;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  margin-right: 1rem;
  cursor: pointer;
}

.c5 {
  margin: 0;
  margin-left: 1rem;
  margin-right: 0.5rem;
  cursor: pointer;
}

<div
  className="c0"
>
  <label
    className="c1"
    htmlFor="checkbox"
  >
    Color
  </label>
  <div
    className="c2"
  >
    <label
      className="c3"
      id="checkbox"
      options={
        Array [
          Object {
            "label": "Red",
            "value": "red",
          },
          Object {
            "label": "Yellow",
            "value": "yellow",
          },
          Object {
            "label": "Green",
            "value": "green",
          },
        ]
      }
      value="red"
      values={
        Array [
          "red",
          false,
          false,
        ]
      }
    >
      <div
        className="c4"
      >
        <input
          className="c5"
          disabled={false}
          id="checkbox"
          name="Color[0]"
          onChange={[Function]}
          type="checkbox"
          value="red"
          values={
            Array [
              "red",
              false,
              false,
            ]
          }
        >
          Lorem Ipsum
        </input>
        <div
          className="c6"
        >
          Red
        </div>
      </div>
    </label>
    <label
      className="c3"
      id="checkbox"
      options={
        Array [
          Object {
            "label": "Red",
            "value": "red",
          },
          Object {
            "label": "Yellow",
            "value": "yellow",
          },
          Object {
            "label": "Green",
            "value": "green",
          },
        ]
      }
      value="yellow"
      values={
        Array [
          "red",
          false,
          false,
        ]
      }
    >
      <div
        className="c4"
      >
        <input
          className="c5"
          disabled={false}
          id="checkbox"
          name="Color[1]"
          onChange={[Function]}
          type="checkbox"
          value="yellow"
          values={
            Array [
              "red",
              false,
              false,
            ]
          }
        >
          Lorem Ipsum
        </input>
        <div
          className="c6"
        >
          Yellow
        </div>
      </div>
    </label>
    <label
      className="c3"
      id="checkbox"
      options={
        Array [
          Object {
            "label": "Red",
            "value": "red",
          },
          Object {
            "label": "Yellow",
            "value": "yellow",
          },
          Object {
            "label": "Green",
            "value": "green",
          },
        ]
      }
      value="green"
      values={
        Array [
          "red",
          false,
          false,
        ]
      }
    >
      <div
        className="c4"
      >
        <input
          className="c5"
          disabled={false}
          id="checkbox"
          name="Color[2]"
          onChange={[Function]}
          type="checkbox"
          value="green"
          values={
            Array [
              "red",
              false,
              false,
            ]
          }
        >
          Lorem Ipsum
        </input>
        <div
          className="c6"
        >
          Green
        </div>
      </div>
    </label>
  </div>
</div>
`;

exports[`CheckboxField using Theme color should return a CheckboxField object with custom color 1`] = `
.c0 {
  position: relative;
  background-color: transparent;
  color: inherit;
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  background-color: hsl(305,33.9%,23.7%);
  color: inherit;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.8rem;
  font-weight: inherit;
  height: auto;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 0.8;
  position: relative;
  top: auto;
  left: 8px;
  padding-left: 8px;
  padding-right: 8px;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c6 {
  box-sizing: border-box;
}

.c2 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 {
  background-color: transparent;
  color: inherit;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: inherit;
  display: inline-block;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  margin-right: 1rem;
  cursor: pointer;
}

.c5 {
  margin: 0;
  margin-left: 1rem;
  margin-right: 0.5rem;
  cursor: pointer;
}

<div
  className="c0"
>
  <label
    className="c1"
    htmlFor="checkbox"
  >
    Color
  </label>
  <div
    className="c2"
  >
    <label
      className="c3"
      id="checkbox"
      options={
        Array [
          Object {
            "label": "Red",
            "value": "red",
          },
          Object {
            "label": "Yellow",
            "value": "yellow",
          },
          Object {
            "label": "Green",
            "value": "green",
          },
        ]
      }
      value="red"
      values={
        Array [
          "red",
          false,
          false,
        ]
      }
    >
      <div
        className="c4"
      >
        <input
          className="c5"
          disabled={false}
          id="checkbox"
          name="Color[0]"
          onChange={[Function]}
          type="checkbox"
          value="red"
          values={
            Array [
              "red",
              false,
              false,
            ]
          }
        >
          Lorem Ipsum
        </input>
        <div
          className="c6"
        >
          Red
        </div>
      </div>
    </label>
    <label
      className="c3"
      id="checkbox"
      options={
        Array [
          Object {
            "label": "Red",
            "value": "red",
          },
          Object {
            "label": "Yellow",
            "value": "yellow",
          },
          Object {
            "label": "Green",
            "value": "green",
          },
        ]
      }
      value="yellow"
      values={
        Array [
          "red",
          false,
          false,
        ]
      }
    >
      <div
        className="c4"
      >
        <input
          className="c5"
          disabled={false}
          id="checkbox"
          name="Color[1]"
          onChange={[Function]}
          type="checkbox"
          value="yellow"
          values={
            Array [
              "red",
              false,
              false,
            ]
          }
        >
          Lorem Ipsum
        </input>
        <div
          className="c6"
        >
          Yellow
        </div>
      </div>
    </label>
    <label
      className="c3"
      id="checkbox"
      options={
        Array [
          Object {
            "label": "Red",
            "value": "red",
          },
          Object {
            "label": "Yellow",
            "value": "yellow",
          },
          Object {
            "label": "Green",
            "value": "green",
          },
        ]
      }
      value="green"
      values={
        Array [
          "red",
          false,
          false,
        ]
      }
    >
      <div
        className="c4"
      >
        <input
          className="c5"
          disabled={false}
          id="checkbox"
          name="Color[2]"
          onChange={[Function]}
          type="checkbox"
          value="green"
          values={
            Array [
              "red",
              false,
              false,
            ]
          }
        >
          Lorem Ipsum
        </input>
        <div
          className="c6"
        >
          Green
        </div>
      </div>
    </label>
  </div>
</div>
`;
